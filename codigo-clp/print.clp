; Imprimimos los ejercicios recomendados

;; Comprueba si el fin del programa ha sido causado por falta de ejercicios
;; compatibles e imprime un aviso correspondiente
(defrule imprimir-error "Imprime error"
  ?f <- (standby FALSE)
  (no-hay ejercicios)
  =>
  (printout t crlf "------------------" crlf)
  (printout t crlf "Lo sentimos, no tenemos un horario de ejercicios que recomendarle con las caracter√≠sticas que nos ha descrito." crlf)
  (printout t crlf "------------------" crlf)
  (retract ?f)
  (assert (standby TRUE))
)

;; Comprueba que el fin del programa se ha alcanzado correctamente e imprime
;; el horario final de rutinas de ejercicios que debe realizar el usuario
(defrule imprimir "Imprime ejercicio"
  ?f <- (standby FALSE)
  (not (no-hay ejercicios))
  =>
  (printout t crlf "------------------" crlf)
  (printout t "Esta es la lista de ejercicios que le recomendamos:" crlf)
  (printout t crlf "LUNES:" crlf)
  (bind ?dia (send [mi_solucion] get-lunes))
  (bind ?i 1)
  (while (<= ?i (length$ ?dia))
  do
    (bind ?ej (nth$ ?i ?dia))
    (printout t (send ?ej get-nombre))
    (printout t ", " (send ?ej get-repeticiones-minimas))
    (if(eq (send ?ej get-repeticiones-minimas) 1)
      then (printout t " rutina en ")
      else (printout t " rutinas en ")
    )
    (printout t (send ?ej get-duracion-minima))
    (printout t " minutos" crlf)
    (bind ?i (+ ?i 1))
  )
  (printout t crlf "MARTES:" crlf)
  (bind ?dia (send [mi_solucion] get-martes))
  (bind ?i 1)
  (while (<= ?i (length$ ?dia))
  do
    (bind ?ej (nth$ ?i ?dia))
    (printout t (send ?ej get-nombre))
    (printout t ", " (send ?ej get-repeticiones-minimas))
    (if(eq (send ?ej get-repeticiones-minimas) 1)
      then (printout t " rutina en ")
      else (printout t " rutinas en ")
    )
    (printout t (send ?ej get-duracion-minima))
    (printout t " minutos" crlf)
    (bind ?i (+ ?i 1))
  )
  (printout t crlf "MIERCOLES:" crlf)
  (bind ?dia (send [mi_solucion] get-miercoles))
  (bind ?i 1)
  (while (<= ?i (length$ ?dia))
  do
    (bind ?ej (nth$ ?i ?dia))
    (printout t (send ?ej get-nombre))
    (printout t ", " (send ?ej get-repeticiones-minimas))
    (if(eq (send ?ej get-repeticiones-minimas) 1)
      then (printout t " rutina en ")
      else (printout t " rutinas en ")
    )
    (printout t (send ?ej get-duracion-minima))
    (printout t " minutos" crlf)
    (bind ?i (+ ?i 1))
  )
  (printout t crlf "JUEVES:" crlf)
  (bind ?dia (send [mi_solucion] get-jueves))
  (bind ?i 1)
  (while (<= ?i (length$ ?dia))
  do
    (bind ?ej (nth$ ?i ?dia))
    (printout t (send ?ej get-nombre))
    (printout t ", " (send ?ej get-repeticiones-minimas))
    (if(eq (send ?ej get-repeticiones-minimas) 1)
      then (printout t " rutina en ")
      else (printout t " rutinas en ")
    )
    (printout t (send ?ej get-duracion-minima))
    (printout t " minutos" crlf)
    (bind ?i (+ ?i 1))
  )
  (printout t crlf "VIERNES:" crlf)
  (bind ?dia (send [mi_solucion] get-viernes))
  (bind ?i 1)
  (while (<= ?i (length$ ?dia))
  do
    (bind ?ej (nth$ ?i ?dia))
    (printout t (send ?ej get-nombre))
    (printout t ", " (send ?ej get-repeticiones-minimas))
    (if(eq (send ?ej get-repeticiones-minimas) 1)
      then (printout t " rutina en ")
      else (printout t " rutinas en ")
    )
    (printout t (send ?ej get-duracion-minima))
    (printout t " minutos" crlf)
    (bind ?i (+ ?i 1))
  )
  (printout t "------------------" crlf)
  (retract ?f)
  (assert (standby TRUE))
; (assert(debug))
)

;; Imprime una serie de informacion del sistema para debugging en caso
;; que lo pidamos con una afirmacion al final de la funcion de impresion
(defrule imprimir-debug
	(debug)
	=>
  (instances)
	(printout t "----------" crlf)
	(send [persona] print)
	(printout t "----------" crlf)
	(send [salud] print)
	(printout t "----------" crlf)
	(send [dieta] print)
	(printout t "----------" crlf)
	(send [mi_problema] print)
	(printout t "----------" crlf)
	(send [mis_objetivos] print)
	(printout t "----------" crlf)
)
